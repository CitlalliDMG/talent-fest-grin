{"version":3,"sources":["serviceWorker.js","components/Admin/Admin.js","components/SignIn/Register.js","firebase/FirebaseCredentials.js","components/SignOut/SignOut.js","firebase/FirebaseUI.js","components/SignIn/SignIn.js","components/Page404/Page404.js","components/Home/NavBar.js","components/SearchField/SearchField.js","components/DisplayCards/DisplayCard.js","components/NewDeck/NewDeck.js","lib/api.js","components/Home/Home.js","constants/routes.js","components/App/App.js","index.js","assets/pokedeck-icono-circular.svg","assets/POKEDECK-NOMBRE.svg"],"names":["Boolean","window","location","hostname","match","AdminPage","react_default","a","createElement","registerInput","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleOnChange","bind","assertThisInitialized","signUp","state","username","email","passwordOne","passwordTwo","event","preventDefault","firebase","auth","createUserWithEmailAndPassword","then","user","assign","catch","error","errorCode","code","errorMessage","message","alert","setState","defineProperty","target","name","value","BrowserRouter","className","lib","src","logoCircular","height","width","onChange","type","s","m","l","label","validate","onClick","Component","firebaseAuth","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","signOut","logout","Firebase","Link","to","SignInScreen","isSignedIn","uiConfig","signInFlow","signInSuccessUrl","signInOptions","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","_this2","unregisterAuthObserver","onAuthStateChanged","SignOut","StyledFirebaseAuth_default","React","loginInput","login","password","signInWithEmailAndPassword","concat","process","err","waves","FirebaseUI","Page404Page","navBar","right","logo","alt","SearchField","getCard","doFetch","onSubmit","initialName","inputSearch","placeholder","DisplayCards","console","log","data","map","pokemonData","index","header","reveal","image","imageUrl","title","set","number","rarity","hp","Math","floor","random","key","NewDeck","lib_api","pokemonName","fetch","response","json","Home","searchString","searchResultList","api","getByName","cards","NavBar","components_SearchField_SearchField","fromSearchField","fromSearchByName","DisplayCards_DisplayCard","components_NewDeck_NewDeck","admin","Admin","register","Register","SignIn_SignIn","Page404","home","components_Home_Home","Routes","basename","Switch","Route","exact","strict","path","component","App","routes","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.7b83bb2d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nconst AdminPage = () => {\n    return ( \n        <div>\n            <h1>Admin Page</h1>\n        </div>\n    );\n}\n \nexport default AdminPage;","\nimport React, {Component} from 'react'\nimport {Row, Input, Button} from 'react-materialize'\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport firebase from 'firebase'\nimport logoCircular from '../../assets/pokedeck-icono-circular.svg'\n\nclass registerInput extends Component {\n    constructor(props) {\n        super(props);\n        this.handleOnChange = this.handleOnChange.bind(this);\n        this.signUp = this.signUp.bind(this);\n        \n        this.state = {\n        username: '',\n        email: '',\n        passwordOne: '',\n        passwordTwo: '',\n        }\n    }\n\n    signUp(event) {\n        event.preventDefault();\n        firebase.auth().createUserWithEmailAndPassword(this.state.email, this.state.passwordOne)\n        .then((user) => {\n            if(user) {\n             window.location.assign('/home')\n            } else {\n                window.location.assign('/')\n            }\n        }).catch((error) => {\n            let errorCode = error.code;\n            let errorMessage = error.message;\n            if (errorCode === 'auth/weak-password') {\n              alert('The password is too weak.');\n            } else {\n              alert(errorMessage);\n            }\n          });\n    }\n    \n    handleOnChange(event) {\n        this.setState({ [event.target.name]: event.target.value})\n    }\n        \n    render() {\n        return (\n        <Router>\n        <div className='entire-page'>\n        <div className='inputContainer'>\n            <Row>\n                <img src={logoCircular} height='150' width='150'/>\n            </Row>\n            <form>\n                <Row>\n                    <Input value={this.state.username} onChange={this.handleOnChange} type=\"text\" className='inputHover' s={10}  m={10} l={10} label=\"Nombre\" name='username' validate></Input>\n                </Row>\n                <Row>\n                    <Input value={this.state.email}\n          onChange={this.handleOnChange} className='inputHover' s={10}  m={10} l={10} label=\"Email\" validate type='email' name='email'></Input>\n                </Row>\n                <Row>\n                    <Input value={this.state.passwordOne}\n          onChange={this.handleOnChange} className='inputHover' s={10}  m={10} l={10} label=\"Contraseña\" validate type='password' name='passwordOne'></Input>\n                </Row>\n                <Row>\n                    <Button type='submit' onClick={this.signUp} className='signInButton' s={10} m={10} l={10}>Registrate</Button>\n                </Row>\n            </form>\n        </div>\n        </div>\n        </Router>\n        );\n    };\n}\nexport default registerInput","import * as firebase from 'firebase/app';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBYiCtUEOtet1va7u-LZ4mnt4pXKKpzQLY\",\n    authDomain: \"pockedecktcg.firebaseapp.com\",\n    databaseURL: \"https://pockedecktcg.firebaseio.com\",\n    projectId: \"pockedecktcg\",\n    storageBucket: \"pockedecktcg.appspot.com\",\n    messagingSenderId: \"80073856143\"\n};\n\nconst firebaseAuth = firebase.initializeApp(firebaseConfig);\n\nexport default firebaseAuth; ","import React, {Component} from 'react'; \nimport Firebase from '../../firebase/FirebaseCredentials';\nimport {Icon} from 'react-materialize';\nimport { Link } from 'react-router-dom';\n\nclass signOut extends Component {\n    constructor(props) {\n        super(props);\n        this.logout = this.logout.bind(this);\n    }\n\n    logout() {\n        Firebase.auth().signOut();\n        \n    }\n    render() {\n        return (\n          <Link to='/' onClick={this.logout}><Icon>exit_to_app\n          </Icon></Link>\n        );\n    }\n}\n\nexport default signOut","import React, {Component} from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from 'firebase/app';\nimport firebaseConfig from './FirebaseCredentials';\nimport SignOut from '../components/SignOut/SignOut';\n\nclass SignInScreen extends React.Component {\n    state = {\n    isSignedIn: false,\n    // Local signed-in state.\n  };\n  // Configure FirebaseUI.\n  uiConfig = {\n    signInFlow: 'redirect',\n    signInSuccessUrl: '/home',\n    // We will display Google and Facebook as auth providers.\n    signInOptions: [\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      firebase.auth.FacebookAuthProvider.PROVIDER_ID\n    ],\n  };\n\n  // Listen to the Firebase Auth state and set the local state.\n  componentDidMount() {\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\n      (user) => {\n        if (user) {\n          this.setState({ isSignedIn: true });\n        } else {\n          this.setState({ user: null });\n        }\n      }\n    );\n  }\n\n  // Make sure we un-register Firebase observers when the component unmounts.\n  componentWillUnmount() {\n    this.unregisterAuthObserver();\n  }\n\n  render() {\n    if (!this.state.isSignedIn) {\n      return (\n        <div>\n          <StyledFirebaseAuth uiConfig={this.uiConfig} firebaseAuth={firebase.auth()} />\n        </div>\n      )\n    } else {\n        return (\n                <SignOut />\n                    )    \n                }\n            }\n        }\nexport default SignInScreen\n","import React, { Component } from 'react'\nimport { Row, Input, Button } from 'react-materialize'\nimport Firebase from '../../firebase/FirebaseCredentials'\nimport { Link, BrowserRouter } from 'react-router-dom'\nimport FirebaseAuth from '../../firebase/FirebaseUI'\nimport logoCircular from '../../assets/pokedeck-icono-circular.svg'\nimport './SignIn.css'\n\nclass loginInput extends Component {\n    constructor(props) {\n        super(props);\n        this.login = this.login.bind(this);\n        this.handleOnChange = this.handleOnChange.bind(this);\n        this.state = {\n            email: '',\n            password: '',\n        }\n    }\n\n    login() {\n        Firebase.auth().signInWithEmailAndPassword(this.state.email, this.state.password)\n            .then((user) => {\n                debugger;\n                window.location.assign(`${process.env.PUBLIC_URL}/home`);\n\n            }).catch((err) => {\n                alert(err.code);\n            });\n    }\n\n    handleOnChange(event) {\n        this.setState({ [event.target.name]: event.target.value })\n    }\n\n    render() {\n        return (\n            <div className='entire-page'>\n            <div className='inputContainer'>\n            <Row>\n                <img src={logoCircular} height='150' width='150'/>\n            </Row>\n\n                <form>\n                    <Row>\n                        <Input value={this.state.email} onChange={this.handleOnChange} className='inputHover' s={10} m={10} l={10} label=\"Email\" name='email' type='email' validate></Input>\n                    </Row>\n                    <Row>\n                        <Input value={this.state.password} onChange={this.handleOnChange} className='inputHover' s={10} m={10} l={10} label=\"Password\" validate name='password' type='password'></Input>\n                    </Row>\n                    <Row>\n                    </Row>\n                    <Row>\n                        <Button type='submit' onClick={this.login} s={10} m={10} l={10} waves='light' className='signInButton'>Conectate</Button>\n                    </Row>\n                </form>\n                <Row>\n                    <FirebaseAuth />\n                    <Link to='/register' s={10} m={10} l={10} className='newUser'>Crear Cuenta</Link>\n                </Row>\n            </div>\n            </div>\n        )\n    }\n}\nexport default loginInput","import React from 'react';\n\nconst Page404Page = () => {\n    return ( \n        <div>\n            <h1>Page404</h1>\n        </div>\n    );\n}\n \nexport default Page404Page;","import React from 'react';\nimport {Navbar, NavItem,} from 'react-materialize';\nimport logo from '../../assets/POKEDECK-NOMBRE.svg';\nimport SignOut from '../SignOut/SignOut';\nimport './navBarStyle.css'\n\nconst navBar = () => (\n    <Navbar className='nav-blue' right>\n        <NavItem> <img src={logo} alt=\"logo-mypokedeck\" className='logo'/> </NavItem>\n        <NavItem></NavItem>\n        <NavItem><SignOut/></NavItem>\n    </Navbar>   \n)\n\nexport default navBar","import React, { Component } from 'react';\nimport propTypes from 'prop-types';\n\nclass SearchField extends Component {\n\n  inputSearch(event){\n    this.props.getCard(event.target.value);\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n    this.props.doFetch();\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.onSubmit.bind(this)}>\n        <input\n          value={this.props.initialName}\n          onChange={this.inputSearch.bind(this)}\n          type=\"text\"\n          placeholder=\"Ingresa que carta buscas\"\n        />\n        <button type=\"submit\">Buscar</button>\n      </form >\n    );\n  }\n}\n\nSearchField.propTypes = {\n  inputSearch: propTypes.func,\n}\n\nexport default SearchField;\n","import React, { Component } from 'react';\nimport {Card, CardTitle} from 'react-materialize';\nimport './DisplayCard.css';\n\nclass DisplayCards extends Component {\n    render () {\n        console.log(this.props.data)\n        return (\n                <div className=\"cardsContainer\">\n                    {this.props.data.map((pokemonData, index) => (\n                        <Card \n                            className=\"pokemonCard\"\n                            header={<CardTitle reveal image={pokemonData.imageUrl} waves='light'/>}\n                            title={pokemonData.name}\n                            reveal={\n                                <div>\n                                    <p>SET: {pokemonData.set} Hp</p>\n                                    <p>NÚMERO: {pokemonData.number}</p>\n                                    <p>RAREZA: {pokemonData.rarity}</p>\n                                    <p>HP: {pokemonData.hp}</p>\n                                    <p>PRECIO: ${Math.floor((Math.random()*10 +1))} MXN</p>\n                                </div>\n\n                            }\n                            key={index}\n                        >\n                        </Card>\n                    ))}\n                </div>\n    )}\n}\n \nexport default DisplayCards;","import React from 'react';\nimport './NewDeck.css';\n\nconst NewDeck = () => {\n    return ( \n        <div className=\"deckContainer\">\n            <span>Aquí van a ir las cartas</span>\n        </div>\n    );\n}\n \nexport default NewDeck;","const BASE_URL = 'https://api.pokemontcg.io/v1/'\n\nclass api {\n  async getByName(pokemonName) {\n    const response = await fetch(`${BASE_URL}cards?name=${pokemonName}`)\n    const data = await response.json()\n    return data\n  }\n}\n\nexport default new api()\n","import React, { Component } from 'react';\nimport NavBar from './NavBar';\nimport SearchField from \"../SearchField/SearchField\";\nimport DisplayCard from \"../DisplayCards/DisplayCard\";\nimport NewDeck from \"../NewDeck/NewDeck\";\nimport api from \"../../lib/api\";\nimport './navBarStyle.css';\n\nclass Home extends Component {\n    constructor() {\n        super()\n        this.state = {\n            searchString: '',\n            searchResultList: []\n        }\n    }\n    // Get string to search\n    fromSearchField(inputSearch) {\n        this.setState({ searchString: inputSearch });\n    }\n\n    // Search by pokemon name\n    async fromSearchByName(){\n        const pokemonData = await api.getByName(this.state.searchString);        \n        this.setState({ searchResultList: pokemonData.cards })\n    }\n\n    render(){\n        return ( \n            <div>\n                <NavBar />\n                <SearchField getCard={this.fromSearchField.bind(this)} doFetch={this.fromSearchByName.bind(this)}/>\n                <div className=\"main\">\n                    <DisplayCard data={this.state.searchResultList} />\n                    <NewDeck/>\n                    {/* <span className=\"col s12 m7 l7\">This div is 12-columns wide on all screen sizes</span> */}\n                    {/* <span className=\"col s12 m5 l5\">6-columns (offset-by-6)</span> */}\n                </div>\n            </div>\n        );\n    }\n}\n// const Home = () => (\n//     <div>\n//         <NavBar />\n//         <div class=\"row with-padding\">\n//             <span class=\"col s12 m7 l7\">This div is 12-columns wide on all screen sizes</span>\n//             <span class=\"col s6 m3 l3\">6-columns (offset-by-6)</span>\n//         </div>\n//     </div>        \n\n// );\n \n\nexport default Home;","import React from 'react';\nimport { BrowserRouter, Route, Link, Switch } from 'react-router-dom'\nimport Admin from '../components/Admin/Admin'\nimport RegisterCard from '../components/SignIn/Register'\nimport Login from '../components/SignIn/SignIn';\nimport Err from '../components/Page404/Page404'\nimport Home from '../components/Home/Home';\n\nconst admin = () => (\n    <div>\n        <Admin />\n    </div>\n);\n\nconst register = () => (\n    <div>\n        <RegisterCard />\n    </div>\n);\n\nconst login = () => (\n    <Login />\n)\n\nconst err = () => (\n    <div>\n        <Err />\n    </div>\n);\n\nconst home = () => (\n    <div>\n        <Home />\n    </div>\n)\n\nconst Routes = () => (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <Switch>\n                <Route exact strict path=\"/\" component={login} />\n                <Route exact strict path=\"/admin\" component={admin} />\n                <Route exact strict path=\"/register\" component={register} />\n                <Route exact strict path=\"/404\" component={err} />\n                <Route exact strict path=\"/home\" component={home} />\n            </Switch>\n    </BrowserRouter>\n);\n\nexport default Routes","import React from 'react';\nimport Routes from '../../constants/routes';\n\nconst App = () => (\n    <Routes />\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './components/App/App';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/pokedeck-icono-circular.7c4aabac.svg\";","module.exports = __webpack_public_path__ + \"static/media/POKEDECK-NOMBRE.c3a5529b.svg\";"],"sourceRoot":""}